// Finite State Machine
// Project: sm.dot
// Description: <none given>
//
// Generated by gv_fsm ruby gem, see https://rubygems.org/gems/gv_fsm
// gv_fsm version 0.0.2
// Generation date: 2020-08-29 15:08:12 +0200
// Generated from: sm.dot
// The finite state machine has:
//   5 states
//   7 transitions

#ifndef EXAMPLE_H
#define EXAMPLE_H
#include <stdlib.h>

// List of states
typedef enum {
  STATE_INIT = 0,  
  STATE_IDLE,  
  STATE_SETUP,  
  STATE_RUNNING,  
  STATE_STOP,  
  NUM_STATES,
  NO_CHANGE
} state_t;

const char *state_names[] = {"init", "idle", "setup", "running", "stop"};

// State function and state transition prototypes
typedef state_t state_func_t(void *data);
typedef void transition_func_t(void *data);

// state functions
state_t do_init(void *data);
state_t do_idle(void *data);
state_t do_setup(void *data);
state_t do_running(void *data);
state_t do_stop(void *data);

// transition functions
void init_to_idle(void *data);
void stay(void *data);
void to_setup(void *data);
void setup_to_running(void *data);
void to_idle(void *data);

// List of state functions
state_func_t *const state_table[NUM_STATES] = {
  do_init,
  do_idle,
  do_setup,
  do_running,
  do_stop
};

// Table of transition functions
transition_func_t *const transition_table[NUM_STATES][NUM_STATES] = {
  /* states:     init            , idle            , setup           , running         , stop             */
  /* init    */ {NULL            , init_to_idle    , NULL            , NULL            , NULL            }, 
  /* idle    */ {NULL            , stay            , to_setup        , NULL            , NULL            }, 
  /* setup   */ {NULL            , NULL            , NULL            , setup_to_running, NULL            }, 
  /* running */ {NULL            , to_idle         , NULL            , stay            , NULL            }, 
  /* stop    */ {NULL            , NULL            , NULL            , NULL            , NULL            }, 
};

// state manager
state_t run_state(state_t cur_state, void *data);

#endif
